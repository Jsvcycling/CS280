Ozymandias	10
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 10
Next token: Ozymandias	strlen: 10
space_slots: 0	spaces_per_slot: 0	remaining_spaces: 0
Empty line...
Percy	5
Bysshe	6
Shelley,	8
1792	4
-	1
1822	4
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 5
Next token: Percy	strlen: 5
space_slots = 1	slots_left = 55
strlen(tokens->front()) = 6
Next token: Bysshe	strlen: 6
space_slots = 2	slots_left = 49
strlen(tokens->front()) = 8
Next token: Shelley,	strlen: 8
space_slots = 3	slots_left = 41
strlen(tokens->front()) = 4
Next token: 1792	strlen: 4
space_slots = 4	slots_left = 37
strlen(tokens->front()) = 1
Next token: -	strlen: 1
space_slots = 5	slots_left = 36
strlen(tokens->front()) = 4
Next token: 1822	strlen: 4
space_slots: 5	spaces_per_slot: 5	remaining_spaces: 0
Empty line...
I	1
met	3
a	1
traveller	9
from	4
an	2
antique	7
land	4
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 1
Next token: I	strlen: 1
space_slots = 1	slots_left = 59
strlen(tokens->front()) = 3
Next token: met	strlen: 3
space_slots = 2	slots_left = 56
strlen(tokens->front()) = 1
Next token: a	strlen: 1
space_slots = 3	slots_left = 55
strlen(tokens->front()) = 9
Next token: traveller	strlen: 9
space_slots = 4	slots_left = 46
strlen(tokens->front()) = 4
Next token: from	strlen: 4
space_slots = 5	slots_left = 42
strlen(tokens->front()) = 2
Next token: an	strlen: 2
space_slots = 6	slots_left = 40
strlen(tokens->front()) = 7
Next token: antique	strlen: 7
space_slots = 7	slots_left = 33
strlen(tokens->front()) = 4
Next token: land	strlen: 4
space_slots: 7	spaces_per_slot: 7	remaining_spaces: 0
Let's generate a paragraph...
Empty line...
Stand	5
in	2
the	3
desert	6
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 5
Next token: Stand	strlen: 5
space_slots = 1	slots_left = 55
strlen(tokens->front()) = 2
Next token: in	strlen: 2
space_slots = 2	slots_left = 53
strlen(tokens->front()) = 3
Next token: the	strlen: 3
space_slots = 3	slots_left = 50
strlen(tokens->front()) = 6
Next token: desert	strlen: 6
space_slots: 3	spaces_per_slot: 3	remaining_spaces: 0
Let's generate a paragraph...
Empty line...
And	3
wrinkled	8
lip,	4
and	3
sneer	5
of	2
cold	4
command,	8
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 3
Next token: And	strlen: 3
space_slots = 1	slots_left = 57
strlen(tokens->front()) = 8
Next token: wrinkled	strlen: 8
space_slots = 2	slots_left = 49
strlen(tokens->front()) = 4
Next token: lip,	strlen: 4
space_slots = 3	slots_left = 45
strlen(tokens->front()) = 3
Next token: and	strlen: 3
space_slots = 4	slots_left = 42
strlen(tokens->front()) = 5
Next token: sneer	strlen: 5
space_slots = 5	slots_left = 37
strlen(tokens->front()) = 2
Next token: of	strlen: 2
space_slots = 6	slots_left = 35
strlen(tokens->front()) = 4
Next token: cold	strlen: 4
space_slots = 7	slots_left = 31
strlen(tokens->front()) = 8
Next token: command,	strlen: 8
space_slots: 7	spaces_per_slot: 7	remaining_spaces: 0
Let's generate a paragraph...
Empty line...
Empty line...
Empty line...
Which	5
yet	3
survive,	8
stamped	7
on	2
these	5
lifeless	8
things,	7
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 5
Next token: Which	strlen: 5
space_slots = 1	slots_left = 55
strlen(tokens->front()) = 3
Next token: yet	strlen: 3
space_slots = 2	slots_left = 52
strlen(tokens->front()) = 8
Next token: survive,	strlen: 8
space_slots = 3	slots_left = 44
strlen(tokens->front()) = 7
Next token: stamped	strlen: 7
space_slots = 4	slots_left = 37
strlen(tokens->front()) = 2
Next token: on	strlen: 2
space_slots = 5	slots_left = 35
strlen(tokens->front()) = 5
Next token: these	strlen: 5
space_slots = 6	slots_left = 30
strlen(tokens->front()) = 8
Next token: lifeless	strlen: 8
space_slots = 7	slots_left = 22
strlen(tokens->front()) = 7
Next token: things,	strlen: 7
space_slots: 7	spaces_per_slot: 2	remaining_spaces: 1
Let's generate a paragraph...
Empty line...
And	3
on	2
the	3
pedestal	8
these	5
words	5
appear:	7
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 3
Next token: And	strlen: 3
space_slots = 1	slots_left = 57
strlen(tokens->front()) = 2
Next token: on	strlen: 2
space_slots = 2	slots_left = 55
strlen(tokens->front()) = 3
Next token: the	strlen: 3
space_slots = 3	slots_left = 52
strlen(tokens->front()) = 8
Next token: pedestal	strlen: 8
space_slots = 4	slots_left = 44
strlen(tokens->front()) = 5
Next token: these	strlen: 5
space_slots = 5	slots_left = 39
strlen(tokens->front()) = 5
Next token: words	strlen: 5
space_slots = 6	slots_left = 34
strlen(tokens->front()) = 7
Next token: appear:	strlen: 7
space_slots: 6	spaces_per_slot: 6	remaining_spaces: 0
Let's generate a paragraph...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
Look	4
on	2
my	2
works,	6
ye	2
Mighty,	7
and	3
despair!'	9
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 4
Next token: Look	strlen: 4
space_slots = 1	slots_left = 56
strlen(tokens->front()) = 2
Next token: on	strlen: 2
space_slots = 2	slots_left = 54
strlen(tokens->front()) = 2
Next token: my	strlen: 2
space_slots = 3	slots_left = 52
strlen(tokens->front()) = 6
Next token: works,	strlen: 6
space_slots = 4	slots_left = 46
strlen(tokens->front()) = 2
Next token: ye	strlen: 2
space_slots = 5	slots_left = 44
strlen(tokens->front()) = 7
Next token: Mighty,	strlen: 7
space_slots = 6	slots_left = 37
strlen(tokens->front()) = 3
Next token: and	strlen: 3
space_slots = 7	slots_left = 34
strlen(tokens->front()) = 9
Next token: despair!'	strlen: 9
space_slots: 7	spaces_per_slot: 7	remaining_spaces: 0
Let's generate a paragraph...
Empty line...
Of	2
that	4
colossal	8
wreck,	6
boundless	9
and	3
bare	4
Let's generate a paragraph...
space_slots = 0	slots_left = 60
strlen(tokens->front()) = 2
Next token: Of	strlen: 2
space_slots = 1	slots_left = 58
strlen(tokens->front()) = 4
Next token: that	strlen: 4
space_slots = 2	slots_left = 54
strlen(tokens->front()) = 8
Next token: colossal	strlen: 8
space_slots = 3	slots_left = 46
strlen(tokens->front()) = 6
Next token: wreck,	strlen: 6
space_slots = 4	slots_left = 40
strlen(tokens->front()) = 9
Next token: boundless	strlen: 9
space_slots = 5	slots_left = 31
strlen(tokens->front()) = 3
Next token: and	strlen: 3
space_slots = 6	slots_left = 28
strlen(tokens->front()) = 4
Next token: bare	strlen: 4
space_slots: 6	spaces_per_slot: 6	remaining_spaces: 0
Let's generate a paragraph...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
Empty line...
